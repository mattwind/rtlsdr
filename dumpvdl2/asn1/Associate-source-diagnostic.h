/*
 * Generated by asn1c-0.9.28 (http://lionet.info/asn1c)
 * From ASN.1 module "ACSE-1"
 * 	found in "atn-ulcs.asn1"
 * 	`asn1c -fcompound-names -gen-PER`
 */

#ifndef	_Associate_source_diagnostic_H_
#define	_Associate_source_diagnostic_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum Associate_source_diagnostic_PR {
	Associate_source_diagnostic_PR_NOTHING,	/* No components present */
	Associate_source_diagnostic_PR_acse_service_user,
	Associate_source_diagnostic_PR_acse_service_provider
} Associate_source_diagnostic_PR;
typedef enum Associate_source_diagnostic__acse_service_user {
	Associate_source_diagnostic__acse_service_user_null	= 0,
	Associate_source_diagnostic__acse_service_user_no_reason_given	= 1,
	Associate_source_diagnostic__acse_service_user_application_context_name_not_supported	= 2,
	Associate_source_diagnostic__acse_service_user_calling_AP_title_not_recognized	= 3,
	Associate_source_diagnostic__acse_service_user_calling_AP_invocation_identifier_not_recognized	= 4,
	Associate_source_diagnostic__acse_service_user_calling_AE_qualifier_not_recognized	= 5,
	Associate_source_diagnostic__acse_service_user_calling_AE_invocation_identifier_not_recognized	= 6,
	Associate_source_diagnostic__acse_service_user_called_AP_title_not_recognized	= 7,
	Associate_source_diagnostic__acse_service_user_called_AP_invocation_identifier_not_recognized	= 8,
	Associate_source_diagnostic__acse_service_user_called_AE_qualifier_not_recognized	= 9,
	Associate_source_diagnostic__acse_service_user_called_AE_invocation_identifier_not_recognized	= 10,
	Associate_source_diagnostic__acse_service_user_authentication_mechanism_name_not_recognized	= 11,
	Associate_source_diagnostic__acse_service_user_authentication_mechanism_name_required	= 12,
	Associate_source_diagnostic__acse_service_user_authentication_failure	= 13,
	Associate_source_diagnostic__acse_service_user_authentication_required	= 14
} e_Associate_source_diagnostic__acse_service_user;
typedef enum Associate_source_diagnostic__acse_service_provider {
	Associate_source_diagnostic__acse_service_provider_null	= 0,
	Associate_source_diagnostic__acse_service_provider_no_reason_given	= 1,
	Associate_source_diagnostic__acse_service_provider_no_common_acse_version	= 2
} e_Associate_source_diagnostic__acse_service_provider;

/* Associate-source-diagnostic */
typedef struct Associate_source_diagnostic {
	Associate_source_diagnostic_PR present;
	union Associate_source_diagnostic_u {
		long	 acse_service_user;
		long	 acse_service_provider;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Associate_source_diagnostic_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_Associate_source_diagnostic;

#ifdef __cplusplus
}
#endif

#endif	/* _Associate_source_diagnostic_H_ */
#include <asn_internal.h>
